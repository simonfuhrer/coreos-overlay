#!/usr/bin/bash -e
# Wrapper for launching etcd via docker.
#
# Make sure to set ETCD_IMAGE_TAG to an image tag published here:
# https://quay.io/repository/coreos/etcd?tab=tags Alternatively,
# override ETCD_IMAGE to a custom image.

function require_ev_all() {
	for rev in $@ ; do
		if [[ -z "${!rev}" ]]; then
			echo ${rev} is not set
			exit 1
		fi
	done
}

function require_ev_one() {
	for rev in $@ ; do
		if [[ ! -z "${!rev}" ]]; then
			return
		fi
	done
	echo One of $@ must be set
	exit 1
}

require_ev_one ETCD_IMAGE ETCD_IMAGE_TAG
require_ev_all ETCD_USER ETCD_DATA_DIR

ETCD_IMAGE_URL="${ETCD_IMAGE_URL:-quay.io/coreos/etcd}"
ETCD_IMAGE="${ETCD_IMAGE:-${ETCD_IMAGE_URL}:${ETCD_IMAGE_TAG}}"

if [[ ! -e "${ETCD_DATA_DIR}" ]]; then
	mkdir --parents "${ETCD_DATA_DIR}"
	chown "${ETCD_USER}" "${ETCD_DATA_DIR}"
fi

# Do not pass ETCD_DATA_DIR through to the container. The default path,
# /var/lib/etcd is always used inside the container.
etcd_data_dir="${ETCD_DATA_DIR}"
ETCD_DATA_DIR="/var/lib/etcd"

ETCD_SSL_DIR="${ETCD_SSL_DIR:-/etc/ssl/certs}"

SYSTEMD_SYSTEM_DIR_SRC="${SYSTEMD_SYSTEM_DIR_SRC:-/run/systemd/system}"
if [[ -d "${SYSTEMD_SYSTEM_DIR_SRC}" ]]; then
	DOCKER_RUN_ARGS="${DOCKER_RUN_ARGS} \
		--mount type=bind,bind-propagation=rprivate,source=/run/systemd/system,target=/run/systemd/system,readonly \
	"
fi

if [[ -S "${NOTIFY_SOCKET}" ]]; then
	DOCKER_RUN_ARGS="${DOCKER_RUN_ARGS} \
		--env NOTIFY_SOCKET=/run/systemd/notify \
		--mount type=bind,bind-propagation=rprivate,source=/run/systemd/notify,target=/run/systemd/notify \
	"
fi

DOCKER="${DOCKER:-/usr/bin/docker}"
set -x
exec ${DOCKER} ${DOCKER_GLOBAL_ARGS} \
	run ${DOCKER_RUN_ARGS} \
	--name=etcd-docker --entrypoint=/usr/local/bin/etcd \
	--mount type=bind,bind-propagation=rshared,source=${etcd_data_dir},target=/var/lib/etcd \
	--mount type=bind,bind-propagation=rprivate,source=${ETCD_SSL_DIR},target=/etc/ssl/certs,readonly \
	--mount type=bind,bind-propagation=rprivate,source=/usr/share/ca-certificates,target=/usr/share/ca-certificates,readonly \
	--mount type=bind,bind-propagation=rprivate,source=/etc/hosts,target=/etc/hosts,readonly \
	--mount type=bind,bind-propagation=rprivate,source=/etc/resolv.conf,target=/etc/resolv.conf,readonly \
	--user=$(id -u "${ETCD_USER}") \
	${ETCD_IMAGE} \
		${ETCD_IMAGE_ARGS} \
		--data-dir=/var/lib/etcd "$@"
